name: "Terraform"

# Use on: pull_request to validate terraform syntax before merging into your branch
on:
  pull_request:
    paths: [ 'terraform/**' ]
  push:
    branches: [ main,master,uat,develop ]
    paths: [ 'terraform/**' ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Cancel previous workflow
        uses: styfle/cancel-workflow-action@0.4.0
        with:
          access_token: ${{ github.token }}
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: ap-southeast-2
          role-to-assume: cicd-role
          role-external-id: ${{ secrets.AWS_ROLE_EXTERNAL_ID }}
          role-duration-seconds: 1800
          role-session-name: github-action
          role-skip-session-tagging: true
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          # terraform_version: 0.13.0:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: PATH
        run: pwd
      - name: LS PATH
        run: ls -al
      - name: Copy files from the s3 application source bucket
        run: aws s3 cp s3://your-terraform-states-bucket/application-name/terraform.tfstate terraform/terraform.tfstate
        continue-on-error: true
      - name: Copy files from the s3 application source bucket
        run: aws s3 cp s3://your-terraform-states-bucket/application-name/terraform-dev.tfvars terraform/terraform-dev.tfvars
      - name: Terraform Install
        id: terraform
        run: |
          cd terraform
          terraform init
          terraform fmt
          terraform validate
          terraform plan -out=".terraform_plan" -var-file terraform-dev.tfvars
          # terraform apply ".terraform_plan"
        continue-on-error: true
  #      - name: Copy files to the s3 application source bucket
  #        run: aws s3 cp terraform/terraform.tfstate s3://your-terraform-states-bucket/application-name/terraform.tfstate